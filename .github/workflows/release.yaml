name: Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Bump version
        run: |
          echo "Bump version in __version__.py to $VERSION"
          sed -i "s/^__version__ = .*/__version__ = \"$VERSION\"/" ./${{ github.event.repository.name }}/__version__.py

      - name: Commit Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./${{ github.event.repository.name }}/__version__.py
          git commit -m "chore(semver): bump version to $VERSION"

      - name: Push Changes
        run: git push origin HEAD:refs/heads/main

  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Prerelease check
        run: |
          if [[ ${{ github.ref_name }} =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
            echo "prerelease=false" >> $GITHUB_ENV
          else
            echo "prerelease=true" >> $GITHUB_ENV
          fi

      - name: Create release
        id: release-creation
        uses: actions/github-script@v6
        env:
          name: ${{ github.ref_name }}
          prerelease: ${{ env.prerelease }}
        with:
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                generate_release_notes: true,
                name: process.env.name,
                owner: context.repo.owner,
                prerelease: process.env.prerelease === "true",
                repo: context.repo.repo,
                tag_name: process.env.name,
              });

              return response.data.id;
            } catch (error) {
              core.setFailed(error.message);
            }
